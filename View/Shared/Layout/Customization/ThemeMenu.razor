@inject IThemeHandler _themeHandler
@inject ProtectedLocalStorage _local
@implements IDisposable

<MudDrawer Anchor="Anchor.Right"
           Open="_themeHandler.ThemeMenuShown"
           Elevation="1" OpenChanged="@(async e => { _themeHandler.UpdateThemeMenu(e); await _local.SetAsync("Theme", new Theme {DarkMode = _themeHandler.DarkMode, Primary = _themeHandler.Theme.Palette.Primary.ToString(), Secondary = _themeHandler.Theme.Palette.Secondary.ToString(), ESideMenuState = _themeHandler.ESideMenuState}); })"
           Variant="@DrawerVariant.Temporary"
           Width="420px" Style="z-index: 5000">
    <MudDrawerHeader Class="align-center">
        <MudText Typo="Typo.body1">
            <b>Theme</b>
        </MudText>
        <MudSpacer/>
        <MudIconButton Color="Color.Default"
                       Icon="@Icons.Material.Filled.Close"
                       OnClick="@(() => _themeHandler.UpdateThemeMenu(false))"
                       Size="Size.Small"/>
    </MudDrawerHeader>
    <MudDivider/>
    <div class="ma-6">
        <MudText Typo="Typo.body2">
            <b>Mode</b>
        </MudText>
        <MudGrid Class="my-3"
                 Spacing="3">
            <MudItem xs="6">
                <MudButton Class="mode-button"
                           FullWidth="true"
                           OnClick="@(() => _themeHandler.UpdateMode(false))"
                           Style="background: white;">
                    <ChildContent>
                        <MudIcon Color="Color.Primary"
                                 Icon="@Icons.Material.Filled.WbSunny"/>
                    </ChildContent>
                </MudButton>
            </MudItem>
            <MudItem xs="6">
                <MudButton Class="mode-button"
                           FullWidth="true"
                           OnClick="@(() => _themeHandler.UpdateMode(true))"
                           Style="background: #333333;">
                    <ChildContent>
                        <MudIcon Icon="@Icons.Material.Filled.DarkMode"
                                 Style="color: #c9c9c9"/>
                    </ChildContent>
                </MudButton>
            </MudItem>
        </MudGrid>
        <MudForm>
            <MudRadioGroup T="ESideMenuState" SelectedOption="_themeHandler.ESideMenuState" SelectedOptionChanged="_themeHandler.UpdateSideMenu">
                <MudRadio Option="@(ESideMenuState.Minimized)" Color="Color.Primary">Minimize</MudRadio>
                <MudRadio Option="@(ESideMenuState.Responsive)" Color="Color.Secondary">Responsive</MudRadio>
                <MudRadio Option="@(ESideMenuState.Maximized)" Color="Color.Primary">Maximize</MudRadio>
            </MudRadioGroup>
        </MudForm>
        <MudExpansionPanels>
            <MudExpansionPanel HideIcon="true">
                <TitleContent>
                    <div class="d-flex justify-content-between">
                        <MudText Class="align-middle" Inline="true" Typo="Typo.h6">Primary Color</MudText>
                        <div class="w-50 rounded py-4" style="@($"background-color:{_themeHandler.Theme.Palette.Primary};")"></div>
                    </div>
                </TitleContent>
                <ChildContent>
                    <MudColorPicker Value="_themeHandler.Theme.Palette.Primary" ValueChanged="_themeHandler.UpdatePrimary" DisableAlpha="true" DisableToolbar="false" ColorPickerMode="ColorPickerMode.RGB" PickerVariant="PickerVariant.Static" Elevation="0"/>
                </ChildContent>
            </MudExpansionPanel>
        </MudExpansionPanels>
        <MudExpansionPanels>
            <MudExpansionPanel HideIcon="true">
                <TitleContent>
                    <div class="d-flex justify-content-between">
                        <MudText Class="align-middle" Inline="true" Typo="Typo.h6">Secondary Color</MudText>
                        <div class="w-50 rounded py-4" style="@($"background-color:{_themeHandler.Theme.Palette.Secondary};")"></div>
                    </div>
                </TitleContent>
                <ChildContent>
                    <MudColorPicker Value="_themeHandler.Theme.Palette.Secondary" ValueChanged="_themeHandler.UpdateSecondary" DisableAlpha="true" DisableToolbar="false" ColorPickerMode="ColorPickerMode.RGB" PickerVariant="PickerVariant.Static" Elevation="0"/>
                </ChildContent>
            </MudExpansionPanel>
        </MudExpansionPanels>
    </div>
</MudDrawer>

<MudOverlay DarkBackground="false"
            OnClick="@(() => _themeHandler.UpdateThemeMenu(false))"
            Visible="_themeHandler.ThemeMenuShown"/>

<style>
    .mode-button {
        border: 1px solid var(--mud-palette-table-lines);
        height: 50px;
    }
</style>

@code {

    protected override void OnInitialized() {
        _themeHandler.ThemeChange += Invoker;
    }

    public void Dispose() {
        _themeHandler.ThemeChange -= Invoker;
    }

    private async void Invoker() {
        await InvokeAsync(StateHasChanged);
    }

}